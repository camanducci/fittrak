# Fittrak deployment /w Postgres (Cloud SQL) and static serving

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-fittrak-static
  labels:
    app: {{ .Release.Name }}-fittrak-static
spec:
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-fittrak-static
    spec:
      containers:
        - name: {{ .Values.containers.static.name }}
          image: {{ .Values.containers.static.image }}
          ports:
            - containerPort: {{ .Values.containers.static.containerPort }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-fittrak-webapp
  labels:
    app: {{ .Release.Name }}-fittrak-webapp
spec:
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-fittrak-webapp
    spec:
      containers:
        - name: {{ .Values.containers.app.name }}
          image: {{ .Values.containers.app.image }}
          ports:
            - containerPort: {{ .Values.containers.app.containerPort }}
          readinessProbe:
            httpGet:
              path: {{ .Values.containers.app.readinessProbe.httpGet.path }}
              port: {{ .Values.containers.app.readinessProbe.httpGet.port }}
            periodSeconds: {{ .Values.containers.app.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.containers.app.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.containers.app.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.containers.app.readinessProbe.failureThreshold }}
          env:
            - name: PG_HOST
              value: {{ quote .Values.containers.app.env.pg_host }}

            - name: PG_PORT
              value: {{ quote .Values.containers.app.env.pg_port }}

            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-cloudsql-db-credentials
                  key: username

            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-cloudsql-db-credentials
                  key: password

            - name: PG_DATABASE
              value: {{ quote .Values.containers.app.env.pg_database }}

            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-django-secrets
                  key: secret_key

            - name: DJANGO_HASHIDS_SALT
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-django-secrets
                  key: hashids_salt

        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=<SET ME>=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true

      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
