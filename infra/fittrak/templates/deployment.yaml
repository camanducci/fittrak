# Fittrak deployment /w Postgres (Cloud SQL) and static serving

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-fittrak-static
  labels:
    app: {{ .Release.Name }}-fittrak-static
spec:
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-fittrak-static
    spec:
      containers:
        - name: {{ .Values.containers.static.name }}
          image: {{ .Values.containers.static.image }}:{{ .Values.containers.static.imageTag }}
          ports:
            - containerPort: {{ .Values.containers.static.containerPort }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-fittrak-webapp
  labels:
    app: {{ .Release.Name }}-fittrak-webapp
spec:
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-fittrak-webapp
    spec:
      containers:
        - name: {{ .Values.containers.app.name }}
          image: {{ .Values.containers.app.image }}:{{ .Values.containers.static.imageTag }}
          ports:
            - containerPort: {{ .Values.containers.app.containerPort }}
          readinessProbe: {{ .Values.containers.app.readinessProbe }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-webapp-env
        - name: {{ .Values.containers.cloudsqlProxy.name }}
          image: {{ .Values.containers.cloudsqlProxy.image }}:{{ .Values.containers.cloudsqlProxy.imageTag }}
          command: ["/cloud_sql_proxy",
                    "{{ printf "-instances=%s=tcp:5432" .Values.containers.cloudsqlProxy.instanceName }}",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true

      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
